import { findRelatedPosts, getRelevanceReasonText } from '../utils/relatedPosts'
import { calculateReadingTime } from '../utils/readingTime'
import { urlFor } from '../utils/image'

// รับ props
interface Props {
  currentPost: any
  allPosts: any[]
  limit?: number
  showReasons?: boolean
  className?: string
}

const { 
  currentPost, 
  allPosts, 
  limit = 3, 
  showReasons = true, 
  className = '' 
} = Astro.props

// หาบทความที่เกี่ยวข้อง
const relatedPosts = findRelatedPosts(currentPost, allPosts, limit)

// ถ้าไม่มีบทความที่เกี่ยวข้อง ไม่แสดง component
if (relatedPosts.length === 0) {
  return null
}

<section class={`related-posts ${className}`}>
  <!-- ✅ Header -->
  <div class="mb-6">
    <h3 class="text-2xl font-bold text-gray-900 mb-2 flex items-center">
      <svg class="w-6 h-6 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
      </svg>
      บทความที่เกี่ยวข้อง
    </h3>
    <p class="text-gray-600">
      บทความอื่นๆ ที่คุณอาจสนใจ ({relatedPosts.length} บทความ)
    </p>
  </div>
  
  <!-- ✅ Related Posts Grid -->
  <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
    {relatedPosts.map((relatedPost) => {
      const post = relatedPost
      const readingTime = calculateReadingTime(post.body || [])
      const imageUrl = post.mainImage ? urlFor(post.mainImage).width(400).height(200).url() : null
      
      return (
        <article class="related-post-card bg-white border border-gray-200 rounded-lg overflow-hidden hover:shadow-lg transition-all duration-300 hover:-translate-y-1">
          <!-- Post Image -->
          {imageUrl && (
            <div class="aspect-w-16 aspect-h-9 bg-gray-200">
              <img 
                src={imageUrl}
                alt={post.mainImage?.alt || post.title}
                class="w-full h-48 object-cover"
                loading="lazy"
              />
            </div>
          )}
          
          <!-- Post Content -->
          <div class="p-4">
            <!-- Categories และ Reading Time -->
            <div class="flex items-center justify-between mb-2">
              <div class="flex flex-wrap gap-1">
                {post.categories?.slice(0, 2).map(category => (
                  <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">
                    {category.title}
                  </span>
                ))}
              </div>
              
              <div class="flex items-center text-xs text-gray-500">
                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                {readingTime.text}
              </div>
            </div>
            
            <!-- Post Title -->
            <h4 class="text-lg font-semibold text-gray-900 mb-2 line-clamp-2">
              <a 
                href={`/post/${post.slug.current}`}
                class="hover:text-blue-600 transition-colors"
              >
                {post.title}
              </a>
            </h4>
            
            <!-- Post Excerpt -->
            <p class="text-gray-600 text-sm mb-3 line-clamp-3">
              {post.excerpt}
            </p>
            
            <!-- Relevance Reason (ถ้าเปิดใช้งาน) -->
            {showReasons && relatedPost.matchReasons && relatedPost.matchReasons.length > 0 && (
              <div class="mb-3 p-2 bg-green-50 border border-green-200 rounded text-xs">
                <div class="flex items-center text-green-700">
                  <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  {getRelevanceReasonText(relatedPost.matchReasons)}
                </div>
              </div>
            )}
            
            <!-- Author และ Date -->
            <div class="flex items-center justify-between text-xs text-gray-500">
              <div class="flex items-center">
                {post.author?.name && (
                  <>
                    <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                    {post.author.name}
                  </>
                )}
              </div>
              
              {post.publishedAt && (
                <div class="flex items-center">
                  <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                  </svg>
                  {new Date(post.publishedAt).toLocaleDateString('th-TH', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                  })}
                </div>
              )}
            </div>
            
            <!-- Tags (ถ้ามี) -->
            {post.tags && post.tags.length > 0 && (
              <div class="mt-3 flex flex-wrap gap-1">
                {post.tags.slice(0, 3).map(tag => (
                  <span class="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full">
                    #{tag}
                  </span>
                ))}
                {post.tags.length > 3 && (
                  <span class="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full">
                    +{post.tags.length - 3}
                  </span>
                )}
              </div>
            )}
            
            <!-- Read More Button -->
            <div class="mt-4">
              <a 
                href={`/post/${post.slug.current}`}
                class="inline-flex items-center text-blue-600 hover:text-blue-800 font-medium text-sm transition-colors"
              >
                อ่านต่อ
                <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            </div>
          </div>
        </article>
      )
    })}
  </div>
  
  <!-- ✅ View More Link (ถ้ามีบทความเพิ่มเติม) -->
  {allPosts.length > limit && (
    <div class="mt-8 text-center">
      <a 
        href="/posts"
        class="inline-flex items-center px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors"
      >
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
        </svg>
        ดูบทความทั้งหมด
      </a>
    </div>
  )}
</section>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .related-post-card {
    position: relative;
  }
  
  .related-post-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .related-post-card:hover::before {
    opacity: 1;
  }
  
  /* Aspect ratio utility */
  .aspect-w-16 {
    position: relative;
  }
  
  .aspect-w-16::before {
    content: '';
    display: block;
    padding-bottom: 56.25%; /* 16:9 aspect ratio */
  }
  
  .aspect-w-16 > img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  /* Mobile responsiveness */
  @media (max-width: 768px) {
    .grid.md\\:grid-cols-2.lg\\:grid-cols-3 {
      grid-template-columns: 1fr;
    }
  }
  
  @media (min-width: 768px) and (max-width: 1024px) {
    .grid.md\\:grid-cols-2.lg\\:grid-cols-3 {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  /* Print styles */
  @media print {
    .related-posts {
      break-inside: avoid;
    }
    
    .related-post-card {
      break-inside: avoid;
      box-shadow: none;
      border: 1px solid #000;
    }
  }
</style> 